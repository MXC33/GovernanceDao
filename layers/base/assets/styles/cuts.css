/* 
  Good tool for generating corner code 
  https://css-generators.com/custom-corners/
*/

@property --border {
  syntax: '<length>';
  inherits: true;
  initial-value: 0;
}

@property --offset {
  syntax: '<number>';
  inherits: true;
  initial-value: 0;
}

.is-paint-supported [cut] {
  --cut-depth-xs: 4px;
  --cut-depth-sm: 8px;
  --cut-depth: 12px;
  --cut-depth-lg: 24px;
  --cut-dent-depth-a: 24px;
  --cut-dent-depth-b: 21px;
  --dent-depth: 4px;
  --border: 1px;
  --corner-radius: 0 20 0 0;
  --stroke-weight: 1;
  clip-path: polygon(var(--path));
  position: relative;
}

[cut] {
  --cut-top-right-bottom-left: 0 0, calc(100% - var(--cut-depth)) 0, 100% var(--cut-depth), 100% 100%, var(--cut-depth) 100%, 0 calc(100% - var(--cut-depth));

  --cut-top-left-bottom-right: 0 var(--cut-depth), var(--cut-depth) 0, 100% 0, 100% calc(100% - var(--cut-depth)), calc(100% - var(--cut-depth)) 100%, 0 100%;

  --cut-top-left: 0 var(--cut-depth), var(--cut-depth) 0, 100% 0, 100% 100%, 0 100%;

  --cut-top-right: 0 0, calc(100% - var(--cut-depth)) 0, 100% var(--cut-depth), 100% 100%, 0 100%;

  --cut-bottom-right: 0 0, 100% 0, 100% calc(100% - var(--cut-depth)), calc(100% - var(--cut-depth)) 100%, 0 100%;

  --cut-bottom-left: 0 0, 100% 0, 100% 100%, var(--cut-depth) 100%, 0 calc(100% - var(--cut-depth));

  --cut-dent-top-right: 0 0, calc(100% - var(--cut-dent-depth-a)) 0%, calc(100% - var(--cut-dent-depth-b)) var(--dent-depth), 100% var(--dent-depth), 100% 100%, 0 100%;
}

[cut~="lg"] {
  --cut-top-right-bottom-left: 0 0, calc(100% - var(--cut-depth-lg)) 0, 100% var(--cut-depth-lg), 100% 100%, var(--cut-depth-lg) 100%, 0 calc(100% - var(--cut-depth-lg));

  --cut-top-left-bottom-right: 0 var(--cut-depth-lg), var(--cut-depth-lg) 0, 100% 0, 100% calc(100% - var(--cut-depth-lg)), calc(100% - var(--cut-depth-lg)) 100%, 0 100%;

  --cut-top-left: 0 var(--cut-depth-lg), var(--cut-depth-lg) 0, 100% 0, 100% 100%, 0 100%;

  --cut-top-right: 0 0, calc(100% - var(--cut-depth-lg)) 0, 100% var(--cut-depth-lg), 100% 100%, 0 100%;

  --cut-bottom-right: 0 0, 100% 0, 100% calc(100% - var(--cut-depth-lg)), calc(100% - var(--cut-depth-lg)) 100%, 0 100%;

  --cut-bottom-left: 0 0, 100% 0, 100% 100%, var(--cut-depth-lg) 100%, 0 calc(100% - var(--cut-depth-lg));
}

[cut~="sm"] {
  --cut-top-right-bottom-left: 0 0, calc(100% - var(--cut-depth-sm)) 0, 100% var(--cut-depth-sm), 100% 100%, var(--cut-depth-sm) 100%, 0 calc(100% - var(--cut-depth-sm));

  --cut-top-left-bottom-right: 0 var(--cut-depth-sm), var(--cut-depth-sm) 0, 100% 0, 100% calc(100% - var(--cut-depth-sm)), calc(100% - var(--cut-depth-sm)) 100%, 0 100%;

  --cut-top-left: 0 var(--cut-depth-sm), var(--cut-depth-sm) 0, 100% 0, 100% 100%, 0 100%;

  --cut-top-right: 0 0, calc(100% - var(--cut-depth-sm)) 0, 100% var(--cut-depth-sm), 100% 100%, 0 100%;

  --cut-bottom-right: 0 0, 100% 0, 100% calc(100% - var(--cut-depth-sm)), calc(100% - var(--cut-depth-sm)) 100%, 0 100%;

  --cut-bottom-left: 0 0, 100% 0, 100% 100%, var(--cut-depth-sm) 100%, 0 calc(100% - var(--cut-depth-sm));

}

[cut~="xs"] {
  --cut-top-right-bottom-left: 0 0, calc(100% - var(--cut-depth-xs)) 0, 100% var(--cut-depth-xs), 100% 100%, var(--cut-depth-xs) 100%, 0 calc(100% - var(--cut-depth-xs));

  --cut-top-left-bottom-right: 0 var(--cut-depth-xs), var(--cut-depth-xs) 0, 100% 0, 100% calc(100% - var(--cut-depth-xs)), calc(100% - var(--cut-depth-xs)) 100%, 0 100%;

  --cut-top-left: 0 var(--cut-depth-xs), var(--cut-depth-xs) 0, 100% 0, 100% 100%, 0 100%;

  --cut-top-right: 0 0, calc(100% - var(--cut-depth-xs)) 0, 100% var(--cut-depth-xs), 100% 100%, 0 100%;

  --cut-bottom-right: 0 0, 100% 0, 100% calc(100% - var(--cut-depth-xs)), calc(100% - var(--cut-depth-xs)) 100%, 0 100%;

  --cut-bottom-left: 0 0, 100% 0, 100% 100%, var(--cut-depth-xs) 100%, 0 calc(100% - var(--cut-depth-xs));

}


.is-paint-supported [cut]:before {
  content: "";
  position: absolute;
  inset: 0;
  mask: paint(cut-corners);
  pointer-events: none;
  transition: background 150ms;
}


[cut~="top-left"] {
  --path: var(--cut-top-left);
}

[cut~="top-right"] {
  --path: var(--cut-top-right);
}

[cut~="dent-top-right"] {
  --path: var(--cut-dent-top-right);
}

[cut~="bottom-left"] {
  --path: var(--cut-bottom-left);
}

[cut~="bottom-right"] {
  --path: var(--cut-bottom-right);
}

[cut~="top-left-bottom-right"] {
  --path: var(--cut-top-left-bottom-right);
}

[cut~="top-right-bottom-left"] {
  --path: var(--cut-top-right-bottom-left);
}


@media (min-width: 768px) {
  [cut~="md:top-left"] {
    --path: var(--cut-top-left);
  }

  [cut~="md:top-right"] {
    --path: var(--cut-top-right);
  }

  [cut~="md:dent-top-right"] {
    --path: var(--cut-dent-top-right);
  }

  [cut~="md:bottom-left"] {
    --path: var(--cut-bottom-left);
  }

  [cut~="md:bottom-right"] {
    --path: var(--cut-bottom-right);
  }

  [cut~="md:top-left-bottom-right"] {
    --path: var(--cut-top-left-bottom-right);
  }

  [cut~="md:top-right-bottom-left"] {
    --path: var(--cut-top-right-bottom-left);
  }

}

.is-paint-supported [cut][card~="accent"],
.is-paint-supported [cut][btn~="primary-outline"],
.is-paint-supported [cut][btn~="secondary-outline"],
.is-paint-supported [cut][btn~="loading-outline"],
.is-paint-supported [cut][btn~="primary"],
.is-paint-supported [cut][btn~="tab"],
.is-paint-supported [cut][btn~="tab-active"],
.is-paint-supported [cut][btn~="accent"],
.is-paint-supported [cut][btn~="white"],
.is-paint-supported [cut][btn~="accent-outline"],
.is-paint-supported [cut][b] {
  border: 0 !important;
}

[cut][btn~="primary-outline"]:before,
[cut][btn~="secondary-outline"]:before {
  background: var(--mc-mint-40);
}

[cut][btn~="primary"]:before {
  background: var(--mc-mint);
}


[cut][btn~="loading-outline"]:before,
[cut][b~="\$mc-orange"]:before {
  background: var(--mc-orange);
}

[cut][b~="\$mc-accent-20"]:before {
  background: var(--mc-accent-20);
}

[cut][btn~="accent"]:before,
[cut][card~="accent"]:before,
[cut][b~="\$mc-accent-40"]:before {
  background: var(--mc-accent-40);
}

[cut][b~="\$mc-accent-60"]:before {
  background: var(--mc-accent-60);
}

[cut][b~="\$mc-accent-80"]:before {
  background: var(--mc-accent-80);
}

[cut][b~="\$corporation-inactive-color"]:before {
  @apply bg-$corporation-inactive-color;
}

[cut][btn~="accent"]:hover:before,
[cut][card~="accent"]:hover:before,
[cut][btn~="accent-outline"]:before,
[cut][b~="\$mc-accent"]:before {
  background: var(--mc-accent);
}

[cut][btn~="secondary-outline"]:hover:before {
  background: var(--mc-mint);
}

[cut][btn~="loading-outline"],
[cut][b~="\$mc-orange"] {
  /* background: var(--mc-orange); */
  border: var(--mc-orange);
}

[cut][btn~="loading-outline"]:hover:before,
[cut][b~="\$mc-orange"]:before {
  background: var(--mc-orange_60);
}

[cut][btn~="primary-outline"]:hover:before {
  background: var(--mc-mint);
}

[cut][btn~="white"]:before {
  background: rgba(255, 255, 255, 0.3);
}

[cut][btn~="white"]:hover:before {
  background: rgba(255, 255, 255, 0.5);
}