query Tokens($credentials: CredentialsInput!) {
  missionControlTokens(credentials: $credentials) {
    ...NFT
  }
}

query EthNFTs($credentials: CredentialsInput!) {
  ethNFTs(credentials: $credentials) {
    ...NFT
  }
}

query Rovers($credentials: CredentialsInput!) {
  rover(credentials: $credentials) {
    ...NFT
  }
}

query AvatarNFT($credentials: CredentialsInput!) {
  avatarNFT(credentials: $credentials) {
    ...NFT
  }
}

query TokenInfo($tokenIds: [Int!]!, $contractAddress: String!) {
  tokenInfo(tokenIds: $tokenIds, contractAddress: $contractAddress) {
    ...NFT
  }
}

query TokenInfoTypeTier(
  $tokens: [TokenInput!]!
  $contractAddress: String!
  $chain: String
) {
  tokenInfoTypeTier(
    tokens: $tokens
    contractAddress: $contractAddress
    chain: $chain
  ) {
    ...NFT
  }
}

query badgeNFT($credentials: CredentialsInput!) {
  badgeNFT(credentials: $credentials) {
    ...NFT
  }
}

fragment NFT on Token {
  contract
  tokenType
  external_url
  tokenId
  balance
  tokenInfo {
    ...TokenInfo
  }
  media {
    ...Media
  }
  network
  mintInfo {
    ...MintInfo
  }
}

fragment TokenInfo on TokenInfo {
  title
  tier
  type
  status
  description
  attributes {
    ...Attribute
  }
  staked
  minted
  inspectorLink
  level
  openable
}

fragment Attribute on Attribute {
  value
  traitType
}

fragment Media on Media {
  animation_url
  image
  mcIcon
  mcImage
  mcVideo
  alchemyThumbnail
  alchemy
}

fragment MintInfo on MintInfo {
  pix_id
  category_id
  merkle_index
}

input TokenInput {
  type: String!
  tier: String
}
